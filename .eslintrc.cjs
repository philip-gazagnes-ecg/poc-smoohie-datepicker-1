module.exports = {
  root: true,
  parser: 'vue-eslint-parser',
  parserOptions: {
    parser: '@typescript-eslint/parser',
  },
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: ['@nuxtjs/eslint-config-typescript', 'plugin:vue/vue3-essential', 'airbnb-base'],
  plugins: ['@typescript-eslint', 'vitest'],
  globals: {},
  rules: {
    semi: ['error', 'never'],
    'no-undef': 'off',
    'no-void': 'off',
    'max-classes-per-file': 'off',
    'max-len': 'off',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': 'error',
    'import/first': 'off',
    'import/named': 'error',
    'import/namespace': 'error',
    'import/default': 'error',
    'import/export': 'error',
    'import/extensions': 'off',
    'import/no-unresolved': 'off',
    'import/no-extraneous-dependencies': 'off',
    'import/prefer-default-export': 'off',
    quotes: ['warn', 'single', { avoidEscape: true }],
    'prefer-promise-reject-errors': 'off',
    'space-before-function-paren': ['error', 'never'],
    'function-paren-newline': ['error', 'consistent'],
    'linebreak-style': 0,
    'arrow-parens': ['error', 'as-needed'],
    'prefer-destructuring': ['error', { object: true, array: false }],
    'no-param-reassign': ['error', { props: false }],
    'no-plusplus': 'off',
    'no-restricted-syntax': 'off',
    'no-await-in-loop': 'off',
    'no-underscore-dangle': 'off',
    'consistent-return': 0,
    camelcase: 0,
    'no-nested-ternary': 'off',
    'no-mixed-operators': [
      'error',
      {
        groups: [
          ['+', '-', '*', '/', '%', '**'],
          ['&', '|', '^', '~', '<<', '>>', '>>>'],
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||'],
          ['in', 'instanceof'],
        ],
        allowSamePrecedence: true,
      },
    ],
    'vue/no-v-html': 'off',
    'vue/no-multiple-template-root': 'off',
    // this rule, if on, would require explicit return type on the `render` function
    '@typescript-eslint/explicit-function-return-type': 'off',
    // in plain CommonJS modules, you can't use `import foo = require('foo')` to pass this rule, so it has to be disabled
    '@typescript-eslint/no-var-requires': 'off',
    // The core 'no-unused-vars' rules (in the eslint:recommended ruleset)
    // does not work with type definitions
    'no-unused-vars': 'off',
    // allow debugger during development only
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
  },
}
